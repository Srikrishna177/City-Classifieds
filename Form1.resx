<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JLwkEoiID//Z
</value>
  </data>
</root>